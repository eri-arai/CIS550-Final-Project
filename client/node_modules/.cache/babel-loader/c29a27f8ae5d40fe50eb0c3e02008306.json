{"ast":null,"code":"var _jsxFileName = \"/Users/alexandraulven/CIS550-Final-Project/client/src/components/Characteristics.js\";\nimport React from 'react';\nimport PageNavbar from './PageNavbar';\nimport CharacteristicRow from './CharacteristicRow';\nimport '../style/Characteristics.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport default class Characteristics extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedCharacteristic: \"\",\n      characteristics: [],\n      songs: []\n    };\n    this.submitCharacteristic = this.submitCharacteristic.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  /* ---- Q3a (Best Genres) ---- */\n\n\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/characteristics\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(characteristicList => {\n      if (!characteristicList) return; // Map each genreObj in genreList to an HTML element:\n      // A button which triggers the showMovies function for each genre.\n\n      let characteristicDivs = characteristicList.map((characteristicObj, i) =>\n      /*#__PURE__*/\n      //   <option value={characteristicObj.characteristic}>{characteristicObj.characteristic}</option> \n      React.createElement(\"option\", {\n        value: characteristicObj.COLUMN_NAME,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 5\n        }\n      }, characteristicObj.COLUMN_NAME)); // Set the state of the genres list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        // characteristics: characteristicDivs\n        characteristics: [/*#__PURE__*/React.createElement(\"option\", {\n          value: 'uplifting',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }\n        }, 'uplifting'), /*#__PURE__*/React.createElement(\"option\", {\n          value: 'calming',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 72\n          }\n        }, 'calming'), /*#__PURE__*/React.createElement(\"option\", {\n          value: 'highenergy',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 119\n          }\n        }, 'highenergy')]\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  handleChange(e) {\n    this.setState({\n      selectedCharacteristic: e.target.value\n    });\n  }\n  /* ---- Q3b (Best Genres) ---- */\n\n\n  submitCharacteristic() {\n    // var fixed = this.state.selectedCharacteristic.replace(/\\//g,\"-\")\n    fetch(\"http://localhost:8081/characteristics/\" + this.state.selectedCharacteristic, // fetch(\"http://localhost:8081/characteristics/\" + fixed,\n    {\n      method: \"GET\"\n    }).then(res => {\n      return res.json();\n    }, err => {\n      console.log(err);\n    }).then(songList => {\n      console.log(songList); //displays your JSON object in the console\n\n      let songDivs = songList.map((song, i) =>\n      /*#__PURE__*/\n      // <RecommendationsRow key={recommendation.id} movie={recommendation} />\n      React.createElement(\"div\", {\n        id: \"results\",\n        key: i,\n        className: \"results-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(CharacteristicRow, {\n        song_title: song.song_title,\n        artist_name: song.artist_name,\n        acousticness: song.acousticness,\n        danceability: song.danceability,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 6\n        }\n      })));\n      this.setState({\n        songs: songDivs\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Characteristics\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(PageNavbar, {\n      active: \"characteristics\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container characteristics-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 12\n      }\n    }, \"Characteristics\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"years-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.selectedCharacteristic,\n      onChange: this.handleChange,\n      className: \"dropdown\",\n      id: \"characteristicsDropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      select: true,\n      value: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, \" -- select an option -- \"), this.state.characteristics), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"submit-btn\",\n      id: \"characteristicsSubmitBtn\",\n      onClick: this.submitCharacteristic,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 16\n      }\n    }, \"Submit\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"song-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"song\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 40\n      }\n    }, \"Song Title\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 31\n      }\n    }, \"Artist Name\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 31\n      }\n    }, \"Acousticness\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 31\n      }\n    }, \"Danceability\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"song-container\",\n      id: \"results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 14\n      }\n    }, this.state.songs)))));\n  }\n\n}","map":{"version":3,"sources":["/Users/alexandraulven/CIS550-Final-Project/client/src/components/Characteristics.js"],"names":["React","PageNavbar","CharacteristicRow","Characteristics","Component","constructor","props","state","selectedCharacteristic","characteristics","songs","submitCharacteristic","bind","handleChange","componentDidMount","fetch","method","then","res","json","err","console","log","characteristicList","characteristicDivs","map","characteristicObj","i","COLUMN_NAME","setState","e","target","value","songList","songDivs","song","song_title","artist_name","acousticness","danceability","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PageNavbar from './PageNavbar';\nimport CharacteristicRow from './CharacteristicRow';\nimport '../style/Characteristics.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default class Characteristics extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tselectedCharacteristic: \"\",\n\t\t\tcharacteristics: [],\n\t\t\tsongs: []\n\t\t};\n\n\t\tthis.submitCharacteristic = this.submitCharacteristic.bind(this);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t}\n\n\t/* ---- Q3a (Best Genres) ---- */\n\tcomponentDidMount() {\n\t\t// Send an HTTP request to the server.\n\t\tfetch(\"http://localhost:8081/characteristics\",\n\t\t{\n\t\t  method: 'GET' // The type of HTTP request.\n\t\t}).then(res => {\n\t\t  // Convert the response data to a JSON.\n      return res.json();\n      \n\t\t}, err => {\n\t\t  // Print the error if there is one.\n\t\t  console.log(err);\n\t\t}).then(characteristicList => {\n\t\t  if (!characteristicList) return;\n\t\t  // Map each genreObj in genreList to an HTML element:\n\t\t  // A button which triggers the showMovies function for each genre.\n\t\t  let characteristicDivs = characteristicList.map((characteristicObj, i) =>\n\t\t//   <option value={characteristicObj.characteristic}>{characteristicObj.characteristic}</option> \n\t\t  <option value={characteristicObj.COLUMN_NAME}>{characteristicObj.COLUMN_NAME}</option>  \n\t\t  );\n\n\t\n\t\t  \n\t\n\t\t  // Set the state of the genres list to the value returned by the HTTP response from the server.\n\t\t  this.setState({\n\t\t// characteristics: characteristicDivs\n\t\tcharacteristics: [<option value={'uplifting'}>{'uplifting'}</option>,<option value={'calming'}>{'calming'}</option>,<option value={'highenergy'}>{'highenergy'}</option>]\n\t\t  });\n\t\t}, err => {\n\t\t  // Print the error if there is one.\n\t\t  console.log(err);\n\t\t});\n\t}\n\n\thandleChange(e) {\n\t\tthis.setState({\n\t\t\tselectedCharacteristic: e.target.value\n\t\t});\n\t}\n\n\t/* ---- Q3b (Best Genres) ---- */\n\tsubmitCharacteristic() {\n\t\t// var fixed = this.state.selectedCharacteristic.replace(/\\//g,\"-\")\n\n\t\tfetch(\"http://localhost:8081/characteristics/\" + this.state.selectedCharacteristic,\n\t\t// fetch(\"http://localhost:8081/characteristics/\" + fixed,\n\t\t{\n\t\t\tmethod: \"GET\"\n\t\t}).then(res => {\n\t\t\treturn res.json();\n\t\t}, err => {\n\t\t\tconsole.log(err);\n\t\t}).then(songList => {\n\t\t\tconsole.log(songList); //displays your JSON object in the console\n\t\t\tlet songDivs = songList.map((song, i) => \n\t\t\t\t// <RecommendationsRow key={recommendation.id} movie={recommendation} />\n\t\t\t\t<div id=\"results\" key={i} className=\"results-container\">\n\t\t\t\t\t<CharacteristicRow song_title={song.song_title} artist_name={song.artist_name} acousticness={song.acousticness} danceability={song.danceability}/>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t);\n\n\t\t\tthis.setState({\n\t\t\t\tsongs: songDivs\n\t\t\t});\n\t\t});\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div className=\"Characteristics\">\n\t\t\t\t<PageNavbar active=\"characteristics\" />\n\n\t\t\t\t<div className=\"container characteristics-container\">\n\t\t\t      <div className=\"jumbotron\">\n\t\t\t        <div className=\"h5\">Characteristics</div>\n\n\t\t\t        <div className=\"years-container\">\n\t\t\t          <div className=\"dropdown-container\">\n\t\t\t            <select value={this.state.selectedCharacteristic} onChange={this.handleChange} className=\"dropdown\" id=\"characteristicsDropdown\">\n\t\t\t            \t<option select value> -- select an option -- </option>\n\t\t\t            \t{this.state.characteristics}\n\t\t\t            </select>\n\t\t\t            <button className=\"submit-btn\" id=\"characteristicsSubmitBtn\" onClick={this.submitCharacteristic}>Submit</button>\n\t\t\t          </div>\n\t\t\t        </div>\n\t\t\t      </div>\n\t\t\t      <div className=\"jumbotron\">\n\t\t\t        <div className=\"song-container\">\n\t\t\t          <div className=\"song\">\n\t\t\t            <div className=\"header\"><strong>Song Title</strong></div>\n\t\t\t\t\t\t<div className=\"header\"><strong>Artist Name</strong></div>\n\t\t\t\t\t\t<div className=\"header\"><strong>Acousticness</strong></div>\n\t\t\t\t\t\t<div className=\"header\"><strong>Danceability</strong></div>\n\t\t\t          </div>\n\t\t\t          <div className=\"song-container\" id=\"results\">\n\t\t\t            {this.state.songs}\n\t\t\t          </div>\n\t\t\t        </div>\n\t\t\t      </div>\n\t\t\t    </div>\n\t\t\t</div>\n\t\t);\n\t}\n}"]},"metadata":{},"sourceType":"module"}