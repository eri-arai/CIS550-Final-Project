{"ast":null,"code":"var _jsxFileName = \"/Users/alexandraulven/CIS550-Final-Project/client/src/components/Billboards.js\";\nimport React from 'react';\nimport PageNavbar from './PageNavbar';\nimport BillboardRow from './BillboardRow';\nimport '../style/Billboards.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport default class Billboards extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedBillboard: \"\",\n      billboards: [],\n      songs: []\n    };\n    this.submitBillboard = this.submitBillboard.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  /* ---- Billboards ---- */\n\n\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/billboards\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(billboardList => {\n      if (!billboardList) return; // Map each genreObj in genreList to an HTML element:\n      // A button which triggers the showMovies function for each genre.\n\n      let billboardDivs = billboardList.map((billboardObj, i) =>\n      /*#__PURE__*/\n      //   <option value={billboardObj.billboard}>{billboardObj.billboard}</option> \n      React.createElement(\"option\", {\n        value: billboardObj.week_id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 5\n        }\n      }, billboardObj.week_id)); // Set the state of the genres list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        billboards: billboardDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  handleChange(e) {\n    this.setState({\n      selectedBillboard: e.target.value\n    });\n  }\n\n  submitBillboard() {\n    var fixed = this.state.selectedBillboard.replace(/\\//g, \"-\"); // fetch(\"http://localhost:8081/billboards/\" + this.state.selectedBillboard,\n\n    fetch(\"http://localhost:8081/billboards/\" + fixed, {\n      method: \"GET\"\n    }).then(res => {\n      return res.json();\n    }, err => {\n      console.log(err);\n    }).then(songList => {\n      console.log(songList); //displays your JSON object in the console\n\n      let songDivs = songList.map((song, i) =>\n      /*#__PURE__*/\n      // <RecommendationsRow key={recommendation.id} movie={recommendation} />\n      React.createElement(\"div\", {\n        id: \"results\",\n        key: i,\n        className: \"results-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(BillboardRow, {\n        song_title: song.song_title,\n        artist_name: song.artist_name,\n        week_position: song.week_position,\n        peak_position: song.peak_position,\n        weeks_on_chart: song.weeks_on_chart,\n        release_date: song.release_date,\n        release_year: song.release_year,\n        acousticness: song.acousticness,\n        danceability: song.danceability,\n        duration_ms: song.duration_ms,\n        energy: song.energy,\n        explicit: song.explicit,\n        instrumentalness: song.instrumentalness,\n        musical_key: song.musical_key,\n        liveness: song.liveness,\n        loudness: song.loudness,\n        mode: song.mode,\n        popularity: song.popularity,\n        speechiness: song.speechiness,\n        tempo: song.tempo,\n        valence: song.valence,\n        genre: song.genre,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 6\n        }\n      })));\n      this.setState({\n        songs: songDivs\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Billboards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(PageNavbar, {\n      active: \"billboards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container billboards-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 12\n      }\n    }, \"Billboards\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"years-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.selectedBillboard,\n      onChange: this.handleChange,\n      className: \"dropdown\",\n      id: \"billboardsDropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      select: true,\n      value: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, \" -- select a week -- \"), this.state.billboards), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"submit-btn\",\n      id: \"billboardsSubmitBtn\",\n      onClick: this.submitBillboard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 16\n      }\n    }, \"Submit\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"song-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"song\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 40\n      }\n    }, \"Week Position\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 40\n      }\n    }, \"Song Title\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 31\n      }\n    }, \"Artist Name\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"song-container\",\n      id: \"results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 14\n      }\n    }, this.state.songs)))));\n  }\n\n}","map":{"version":3,"sources":["/Users/alexandraulven/CIS550-Final-Project/client/src/components/Billboards.js"],"names":["React","PageNavbar","BillboardRow","Billboards","Component","constructor","props","state","selectedBillboard","billboards","songs","submitBillboard","bind","handleChange","componentDidMount","fetch","method","then","res","json","err","console","log","billboardList","billboardDivs","map","billboardObj","i","week_id","setState","e","target","value","fixed","replace","songList","songDivs","song","song_title","artist_name","week_position","peak_position","weeks_on_chart","release_date","release_year","acousticness","danceability","duration_ms","energy","explicit","instrumentalness","musical_key","liveness","loudness","mode","popularity","speechiness","tempo","valence","genre","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PageNavbar from './PageNavbar';\nimport BillboardRow from './BillboardRow';\nimport '../style/Billboards.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default class Billboards extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tselectedBillboard: \"\",\n\t\t\tbillboards: [],\n\t\t\tsongs: []\n\t\t};\n\n\t\tthis.submitBillboard = this.submitBillboard.bind(this);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t}\n\n\t/* ---- Billboards ---- */\n\tcomponentDidMount() {\n\t\t// Send an HTTP request to the server.\n\t\tfetch(\"http://localhost:8081/billboards\",\n\t\t{\n\t\t  method: 'GET' // The type of HTTP request.\n\t\t}).then(res => {\n\t\t  // Convert the response data to a JSON.\n      return res.json();\n      \n\t\t}, err => {\n\t\t  // Print the error if there is one.\n\t\t  console.log(err);\n\t\t}).then(billboardList => {\n\t\t  if (!billboardList) return;\n\t\t  // Map each genreObj in genreList to an HTML element:\n\t\t  // A button which triggers the showMovies function for each genre.\n\t\t  let billboardDivs = billboardList.map((billboardObj, i) =>\n\t\t//   <option value={billboardObj.billboard}>{billboardObj.billboard}</option> \n\t\t  <option value={billboardObj.week_id}>{billboardObj.week_id}</option>  \n\t\t  );\n\t\n\t\t  \n\t\n\t\t  // Set the state of the genres list to the value returned by the HTTP response from the server.\n\t\t  this.setState({\n        billboards: billboardDivs\n\t\t  });\n\t\t}, err => {\n\t\t  // Print the error if there is one.\n\t\t  console.log(err);\n\t\t});\n\t}\n\n\thandleChange(e) {\n\t\tthis.setState({\n\t\t\tselectedBillboard: e.target.value\n\t\t});\n\t}\n\n\tsubmitBillboard() {\n\t\tvar fixed = this.state.selectedBillboard.replace(/\\//g,\"-\")\n\n\t\t// fetch(\"http://localhost:8081/billboards/\" + this.state.selectedBillboard,\n\t\tfetch(\"http://localhost:8081/billboards/\" + fixed,\n\t\t{\n\t\t\tmethod: \"GET\"\n\t\t}).then(res => {\n\t\t\treturn res.json();\n\t\t}, err => {\n\t\t\tconsole.log(err);\n\t\t}).then(songList => {\n\t\t\tconsole.log(songList); //displays your JSON object in the console\n\t\t\tlet songDivs = songList.map((song, i) => \n\t\t\t\t// <RecommendationsRow key={recommendation.id} movie={recommendation} />\n\t\t\t\t<div id=\"results\" key={i} className=\"results-container\">\n\t\t\t\t\t<BillboardRow song_title={song.song_title} artist_name={song.artist_name} week_position={song.week_position} peak_position={song.peak_position} weeks_on_chart={song.weeks_on_chart}\n\t\t\t\t\trelease_date={song.release_date} release_year={song.release_year} acousticness={song.acousticness} danceability={song.danceability} \n\t\t\t\t\tduration_ms={song.duration_ms} energy={song.energy} explicit={song.explicit} instrumentalness={song.instrumentalness} musical_key={song.musical_key}\n\t\t\t\t\tliveness={song.liveness} loudness={song.loudness} mode={song.mode} popularity={song.popularity} speechiness={song.speechiness} \n\t\t\t\t\ttempo={song.tempo} valence={song.valence} genre={song.genre}/>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t);\n\n\t\t\tthis.setState({\n\t\t\t\tsongs: songDivs\n\t\t\t});\n\t\t});\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div className=\"Billboards\">\n\t\t\t\t<PageNavbar active=\"billboards\" />\n\n\t\t\t\t<div className=\"container billboards-container\">\n\t\t\t      <div className=\"jumbotron\">\n\t\t\t        <div className=\"h5\">Billboards</div>\n\n\t\t\t        <div className=\"years-container\">\n\t\t\t          <div className=\"dropdown-container\">\n\t\t\t            <select value={this.state.selectedBillboard} onChange={this.handleChange} className=\"dropdown\" id=\"billboardsDropdown\">\n\t\t\t            \t<option select value> -- select a week -- </option>\n\t\t\t            \t{this.state.billboards}\n\t\t\t            </select>\n\t\t\t            <button className=\"submit-btn\" id=\"billboardsSubmitBtn\" onClick={this.submitBillboard}>Submit</button>\n\t\t\t          </div>\n\t\t\t        </div>\n\t\t\t      </div>\n\t\t\t      <div className=\"jumbotron\">\n\t\t\t        <div className=\"song-container\">\n\t\t\t          <div className=\"song\">\n\t\t\t            <div className=\"header\"><strong>Week Position</strong></div>\n\t\t\t            <div className=\"header\"><strong>Song Title</strong></div>\n\t\t\t\t\t\t<div className=\"header\"><strong>Artist Name</strong></div>\n\t\t\t\t\t\t{/* <div className=\"header\"><strong>Peak Position</strong></div>\n\t\t\t\t\t\t<div className=\"header\"><strong>Weeks On Chart</strong></div> */}\n\t\t\t          </div>\n\t\t\t          <div className=\"song-container\" id=\"results\">\n\t\t\t            {this.state.songs}\n\t\t\t          </div>\n\t\t\t        </div>\n\t\t\t      </div>\n\t\t\t    </div>\n\t\t\t</div>\n\t\t);\n\t}\n}"]},"metadata":{},"sourceType":"module"}